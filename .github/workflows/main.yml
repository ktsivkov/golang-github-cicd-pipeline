name: "Build & Deploy"
run-name: "${{ github.actor }} runs a pipeline."
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    name: "Test"
    steps:
      -
        uses: actions/checkout@v3
      -
        name: "Checkout"
        uses: actions/checkout@v3
      -
        name: "Set up Docker BuildX"
        uses: docker/setup-buildx-action@v2
      -
        name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: "Build test runner"
        uses: docker/build-push-action@v3
        with:
          file: "docker/testing.Dockerfile"
          push: true
          tags: ${{ vars.DOCKER_IMAGE_REPOSITORY }}/${{ vars.DOCKER_RUNNER_IMAGE }}:${{github.run_id}}, ${{ vars.DOCKER_IMAGE_REPOSITORY }}/${{ vars.DOCKER_RUNNER_IMAGE }}:latest
          cache-from: type=registry,ref=${{ vars.DOCKER_IMAGE_REPOSITORY }}/${{ vars.DOCKER_RUNNER_IMAGE }}
          cache-to: type=inline
      -
        name: "Run tests"
        env:
          COVERAGE_THRESHOLD: ${{ vars.COVERAGE_THRESHOLD }}
          DOCKER_IMAGE_REPOSITORY: ${{ vars.DOCKER_IMAGE_REPOSITORY }}
          DOCKER_RUNNER_IMAGE: ${{ vars.DOCKER_RUNNER_IMAGE }}:${{github.run_id}}
        run: |
          docker run -e COVERAGE_THRESHOLD=$COVERAGE_THRESHOLD $DOCKER_IMAGE_REPOSITORY/$DOCKER_RUNNER_IMAGE
#  build:
#    runs-on: self-hosted
#    name: "Build"
#    steps:
#      -
#        uses: actions/checkout@v3
#      -
#        name: "Checkout"
#        uses: actions/checkout@v3
#      -
#        name: "Set up Docker BuildX"
#        uses: docker/setup-buildx-action@v2
#      -
#        name: "Login to Docker Hub"
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      -
#        name: "[Application] Build and push"
#        uses: docker/build-push-action@v3
#        with:
#          file: "docker/Dockerfile"
#          push: true
#          tags: ktsivkov/golang-github-cicd:${{github.run_id}}, ktsivkov/golang-github-cicd:latest
#          cache-from: type=registry,ref=ktsivkov/golang-github-cicd
#          cache-to: type=inline
#  build:
#    runs-on: self-hosted
#    name: "Image Building"
#    steps:
#      -
#        uses: actions/checkout@v3
#      -
#        name: "Checkout"
#        uses: actions/checkout@v3
#      -
#        name: "Set up Docker BuildX"
#        uses: docker/setup-buildx-action@v2
#      -
#        name: "Login to Docker Hub"
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      -
#        name: "[Application] Build and push"
#        uses: docker/build-push-action@v3
#        with:
#          file: "docker/Dockerfile"
#          push: true
#          tags: ktsivkov/golang-github-cicd:${{github.run_id}}, ktsivkov/golang-github-cicd:latest
#          cache-from: type=registry,ref=ktsivkov/golang-github-cicd
#          cache-to: type=inline
#
#      -
#        name: "[Application] Build and push"
#        uses: docker/build-push-action@v3
#        with:
#          file: "docker/Dockerfile"
#          push: true
#          tags: ktsivkov/golang-github-cicd:${{github.run_id}}, ktsivkov/golang-github-cicd:latest
#          cache-from: type=registry,ref=ktsivkov/golang-github-cicd
#          cache-to: type=inline

